<?php

/**
 * sfGuardUser
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    skinny
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7021 2010-01-12 20:39:49Z lsmith $
 */
class nmGuardStuffUser extends PluginsfGuardUser
{
  //Override this function to check if user is identifid with a new password
  //from the forgotten password process
  public function checkPassword($password)
  {
    if ($callable = sfConfig::get('app_sf_guard_plugin_check_password_callable'))
    {
      return call_user_func_array($callable, array($this->getUsername(), $password, $this));
    }
    else
    {
      return ($this->checkPasswordByGuard($password) || $this->checkNewPassword($password)) ;
    }
  }

  public function checkNewPassword($password){
    $algorithm = $this->getAlgorithm();
    if (false !== $pos = strpos($algorithm, '::'))
    {
      $algorithm = array(substr($algorithm, 0, $pos), substr($algorithm, $pos + 2));
    }
    if (!is_callable($algorithm))
    {
      throw new sfException(sprintf('The algorithm callable "%s" is not callable.', $algorithm));
    }

    //Check if the newpassword is valid
    if ($this->getProfile()->getNewPassword() == call_user_func_array($algorithm, array($this->getSalt().$password))){
      $this->validateNewPassword();
      return true;
    }else{
      return false;
    }
  }

  //replace old password with new one
  public function validateNewPassword(){
    $profile = $this->getProfile();
    parent::_set('password',$profile->getNewPassword());
    $profile->setNewPassword(null);
    $profile->setNewPasswordCreatedAt(null);
    $profile->save();
  }


  //Repeating code from plugins/sfGuardPlugin/lib/model/plugin/PluginsfGuardUser.php sad :(  
  public function setPasswordForgotten($password){
    if (!$password && 0 == strlen($password))
    {
      return;
    }

    if (!$salt = $this->getSalt())
    {
      $salt = md5(rand(100000, 999999).$this->getUsername());
      $this->setSalt($salt);
    }
    $algorithm = sfConfig::get('app_sf_guard_plugin_algorithm_callable', 'sha1');
    $algorithmAsStr = is_array($algorithm) ? $algorithm[0].'::'.$algorithm[1] : $algorithm;
    if (!is_callable($algorithm))
    {
      throw new sfException(sprintf('The algorithm callable "%s" is not callable.', $algorithmAsStr));
    }
    $this->setAlgorithm($algorithmAsStr);

    $profile = $this->getProfile();
    $profile->setNewPassword(call_user_func_array($algorithm, array($salt.$password)));
    $profile->setDateTimeObject('new_password_created_at', new DateTime());
    $profile->save();
  }
}
